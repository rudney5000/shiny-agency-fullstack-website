{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dedy R\\\\01 Documents\\\\shiny-agency\\\\src\\\\pages\\\\Survey\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport colors from '../../utils/style/colors';\nimport { Loader } from '../../utils/style/Atoms';\nimport { useFetch } from '../../utils/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SurveyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = SurveyContainer;\nconst QuestionTitle = styled.h2`\n  text-decoration: underline;\n  text-decoration-color: ${colors.primary};\n`;\n_c2 = QuestionTitle;\nconst QuestionContent = styled.span`\n  margin: 30px;\n`;\n_c3 = QuestionContent;\nconst LinkWrapper = styled.div`\n  padding-top: 30px;\n  & a {\n    color: black;\n  }\n  & a:first-of-type {\n    margin-right: 20px;\n  }\n`;\n_c4 = LinkWrapper;\nconst {\n  data,\n  isLoading\n} = useFetch(`http://localhost:8000/survey`);\nconst {\n  surveyData\n} = data;\nfunction Survey() {\n  _s();\n  const {\n    questionNumber\n  } = useParams();\n  const questionNumberInt = parseInt(questionNumber);\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1;\n  const nextQuestionNumber = questionNumberInt + 1;\n  const [surveyData, setSurveyData] = useState({});\n  const [isDataLoading, setDataLoading] = useState(false);\n\n  // Cette syntaxe permet aussi bien de faire des calls API.\n  // Mais pour utiliser await dans une fonction, il faut que celle-ci soit async (pour asynchrone).\n  // Comme la fonction pass√©e √† useEffect ne peut pas √™tre asynchrone,\n  // il faut utiliser une fonction qui est appel√©e dans useEffect et d√©clar√©e en dehors, comme ici üëá.\n  // Essayez de commenter le code cr√©√© dans le chapitre et de d√©commenter fetchData pour voir.\n\n  // async function fetchData() {\n  //   try {\n  //     const response = await fetch(`http://localhost:8000/survey`)\n  //     const { surveyData } = await response.json()\n  //     setSurveyData(surveyData)\n  //   } catch (error) {\n  // console.log('===== error =====', error)\n  // setError(true)\n  //   }\n  // }\n\n  useEffect(() => {\n    // fetchData()\n    setDataLoading(true);\n    fetch(`http://localhost:8000/survey`).then(response => response.json().then(_ref => {\n      let {\n        surveyData\n      } = _ref;\n      setSurveyData(surveyData);\n      setDataLoading(false);\n    }));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SurveyContainer, {\n    children: [/*#__PURE__*/_jsxDEV(QuestionTitle, {\n      children: [\"Question \", questionNumber]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), isDataLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(QuestionContent, {\n      children: surveyData[questionNumber]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LinkWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${prevQuestionNumber}`,\n        children: \"Pr\\xE9c\\xE9dent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), surveyData[questionNumberInt + 1] ? /*#__PURE__*/_jsxDEV(Link, {\n        to: `/survey/${nextQuestionNumber}`,\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/results\",\n        children: \"R\\xE9sultats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Survey, \"ojhW916f2rbCuOu1TKQdfP7pRdE=\", false, function () {\n  return [useParams];\n});\n_c5 = Survey;\nexport default Survey;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SurveyContainer\");\n$RefreshReg$(_c2, \"QuestionTitle\");\n$RefreshReg$(_c3, \"QuestionContent\");\n$RefreshReg$(_c4, \"LinkWrapper\");\n$RefreshReg$(_c5, \"Survey\");","map":{"version":3,"names":["useState","useEffect","useParams","Link","styled","colors","Loader","useFetch","SurveyContainer","div","QuestionTitle","h2","primary","QuestionContent","span","LinkWrapper","data","isLoading","surveyData","Survey","questionNumber","questionNumberInt","parseInt","prevQuestionNumber","nextQuestionNumber","setSurveyData","isDataLoading","setDataLoading","fetch","then","response","json"],"sources":["D:/Dedy R/01 Documents/shiny-agency/src/pages/Survey/index.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport colors from '../../utils/style/colors'\r\nimport { Loader } from '../../utils/style/Atoms'\r\nimport { useFetch } from '../../utils/hooks'\r\n\r\nconst SurveyContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst QuestionTitle = styled.h2`\r\n  text-decoration: underline;\r\n  text-decoration-color: ${colors.primary};\r\n`\r\n\r\nconst QuestionContent = styled.span`\r\n  margin: 30px;\r\n`\r\n\r\nconst LinkWrapper = styled.div`\r\n  padding-top: 30px;\r\n  & a {\r\n    color: black;\r\n  }\r\n  & a:first-of-type {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst { data, isLoading } = useFetch(`http://localhost:8000/survey`)\r\n\r\nconst { surveyData } = data\r\n\r\nfunction Survey() {\r\n  const { questionNumber } = useParams()\r\n  const questionNumberInt = parseInt(questionNumber)\r\n  const prevQuestionNumber = questionNumberInt === 1 ? 1 : questionNumberInt - 1\r\n  const nextQuestionNumber = questionNumberInt + 1\r\n  const [surveyData, setSurveyData] = useState({})\r\n  const [isDataLoading, setDataLoading] = useState(false)\r\n\r\n  // Cette syntaxe permet aussi bien de faire des calls API.\r\n  // Mais pour utiliser await dans une fonction, il faut que celle-ci soit async (pour asynchrone).\r\n  // Comme la fonction pass√©e √† useEffect ne peut pas √™tre asynchrone,\r\n  // il faut utiliser une fonction qui est appel√©e dans useEffect et d√©clar√©e en dehors, comme ici üëá.\r\n  // Essayez de commenter le code cr√©√© dans le chapitre et de d√©commenter fetchData pour voir.\r\n\r\n  // async function fetchData() {\r\n  //   try {\r\n  //     const response = await fetch(`http://localhost:8000/survey`)\r\n  //     const { surveyData } = await response.json()\r\n  //     setSurveyData(surveyData)\r\n  //   } catch (error) {\r\n  // console.log('===== error =====', error)\r\n  // setError(true)\r\n  //   }\r\n  // }\r\n\r\n  useEffect(() => {\r\n    // fetchData()\r\n    setDataLoading(true)\r\n    fetch(`http://localhost:8000/survey`).then((response) =>\r\n      response.json().then(({ surveyData }) => {\r\n        setSurveyData(surveyData)\r\n        setDataLoading(false)\r\n      })\r\n    )\r\n  }, [])\r\n\r\n  return (\r\n    <SurveyContainer>\r\n      <QuestionTitle>Question {questionNumber}</QuestionTitle>\r\n      {isDataLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <QuestionContent>{surveyData[questionNumber]}</QuestionContent>\r\n      )}\r\n      <LinkWrapper>\r\n        <Link to={`/survey/${prevQuestionNumber}`}>Pr√©c√©dent</Link>\r\n        {surveyData[questionNumberInt + 1] ? (\r\n          <Link to={`/survey/${nextQuestionNumber}`}>Suivant</Link>\r\n        ) : (\r\n          <Link to=\"/results\">R√©sultats</Link>\r\n        )}\r\n      </LinkWrapper>\r\n    </SurveyContainer>\r\n  )\r\n}\r\n\r\nexport default Survey\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}